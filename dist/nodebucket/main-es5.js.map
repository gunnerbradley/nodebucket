{"version":3,"sources":["webpack:///src/app/pages/home/home.component.ts","webpack:///src/app/pages/home/home.component.html","webpack:///src/app/shared/auth-layout/auth-layout.component.ts","webpack:///src/app/shared/auth-layout/auth-layout.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/app.component.ts","webpack:///src/app/sign-in.service.ts","webpack:///src/app/pages/sign-in/sign-in.component.ts","webpack:///src/app/pages/sign-in/sign-in.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/shared/create-task-dialog/create-task-dialog.component.ts","webpack:///src/app/shared/create-task-dialog/create-task-dialog.component.html","webpack:///src/app/contact/contact.component.ts","webpack:///src/app/contact/contact.component.html","webpack:///src/app/sign-in.guard.ts","webpack:///src/app/shared/base-layout/base-layout.component.ts","webpack:///src/app/shared/base-layout/base-layout.component.html","webpack:///src/app/pages/not-found/not-found.component.ts","webpack:///src/app/pages/not-found/not-found.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/pages/services/task.service.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["HomeComponent","taskService","cookieService","fb","empId","parseInt","get","findAllTasks","subscribe","res","console","log","employee","err","toDo","done","taskForm","group","text","compose","required","createTask","controls","value","data","newTask","AuthLayoutComponent","environment","production","AppComponent","SignInService","router","http","sessionUser","signedIn","navigate","SignInComponent","signInService","formModel","employeeId","pattern","signInCheck","response","set","firstName","signIn","AppModule","CreateTaskDialogComponent","dialogRef","close","ContactComponent","SignInGuard","next","state","BaseLayoutComponent","deleteAll","signOut","NotFoundComponent","routes","path","component","children","canActivate","redirectTo","AppRoutingModule","forRoot","TaskService","task","post","bootstrapModule","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Employee } from 'src/app/shared/models/employee.interface';\nimport { Item } from 'src/app/shared/models/item.interface';\nimport { CookieService } from 'ngx-cookie-service';\nimport { TaskService } from '../services/task.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  taskForm: FormGroup;\n  employee: Employee;\n  toDo: Item[];\n  done: Item[];\n  empId: number;\n\n\n  constructor(public taskService: TaskService, private cookieService: CookieService, private fb: FormBuilder) {\n    this.empId = parseInt(this.cookieService.get('session_user'), 10)\n\n    this.taskService.findAllTasks(this.empId).subscribe(res => {\n      console.log('--Server response from findAllTask--');\n      console.log(res)\n\n      this.employee = res;\n      console.log('--Employee Object--')\n      console.log(this.employee)\n    }, err => {\n      console.log('--Eerver Error');\n      console.log(err);\n    }, () => {\n      console.log('Inside complete function of findAllTasks API');\n\n      this.toDo = this.employee.toDo;\n      this.done = this.employee.done;\n\n      console.log('--ToDo Tasks');\n      console.log(this.toDo);\n\n      console.log('--Done Tasks');\n      console.log(this.done)\n    })\n\n  }\n\n  ngOnInit(): void {\n    this.taskForm = this.fb.group({\n      text: [null, Validators.compose([Validators.required])]\n    })\n  }\n\n  newTask() {\n    this.taskService.createTask(this.empId, this.taskForm.controls['text'].value).subscribe(res => {\n      this.employee = res.data;\n    }, err => {\n     console.log(err);\n    })\n  }\n\n\n\n\n\n}\n","<div fxLayout=\"row wrap\">\n  <div fxFlex>\n    <mat-card class=\"mat-elevation-z0 main-list\">\n      <br /><br />\n      <mat-card-title class=\"title\">To-Do List</mat-card-title>\n      <hr>\n      <div fxLayout=\"row\">\n         <div fxLayout=\"column\" fxFlex=\"100%\" class=\"new-task-forum\">\n          <mat-card-subtitle class=\"subtitle\">Add New Task</mat-card-subtitle>\n          <form [formGroup]=\"taskForm\" method=\"post\">\n            <input matInput formControlName=\"text\" type=\"text\" class=\"task-input\" (keydown.enter)=\"newTask()\" placeholder=\"Enter Task...\">\n            <button (click)=\"newTask()\">Add+</button>\n          </form>\n        </div>\n        </div>\n\n<hr>\n      <mat-card-content>\n        <div fxLayout=\"column\" fxFlex=\"50%\" class=\"list todo-list\">\n\n        <mat-card-subtitle class=\"subtitle\">To-Do</mat-card-subtitle>\n        <ul>\n          <li class=\"item \">Buy Milk\n            <button class=\"x-button\">\n              <img\n                src=\"../../../assets/icons/x-symbol.svg\"\n                alt=\"Remove task item button\"\n                height=\"20\"\n                width=\"20\"\n                class=\"x-icon\"\n                />\n            </button>\n          </li>\n        </ul>\n\n        </div>\n\n        <div fxLayout=\"column\" fxFlex=\"50%\" class=\"list\">\n          <mat-card-subtitle class=\"subtitle\">Done</mat-card-subtitle>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth-layout.component.html',\n  styleUrls: ['./auth-layout.component.css']\n})\nexport class AuthLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `<router-outlet></router-outlet>`,\n  styles: [``]\n})\nexport class AppComponent {\n  \n}\n","import { Injectable } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n// export class SignInService {\n\n//   employeeIds: Array<number>;\n\n//   constructor() {\n//     this.employeeIds = [1007, 1008, 1009, 1010, 1011, 1012];\n//   }\n\n//   validate(employeeId: number) {\n//     return this.employeeIds.some(id => id === employeeId);\n//   }\n// }\n\nexport class SignInService {\n\n\tconstructor(private router: Router, private cookieService: CookieService, private http: HttpClient) {}\n\n\t/*\n\t *  getSessionCookie()\n\t *  Params: none\n\t *  Response: string\n\t *  Description: Returns the session_user cookie.\n\t */\n\tpublic getSessionCookie(): string {\n\t\tconst sessionUser = this.cookieService.get('session_user');\n\t\tif (sessionUser) {\n\t\t\treturn sessionUser;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/*\n\t *  signInCheck()\n\t *  Params: none\n\t *  Response: Boolean\n\t *  Description: Checks if a user has a session_user cookie.\n\t */\n\tpublic signInCheck(): boolean {\n\t\tif (this.cookieService.get('session_user')) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/*\n\t *  signOut()\n\t *  Params: none\n\t *  Description: Removes the session_user cookie.\n\t */\n\tpublic signOut() {\n\t\t// Properties\n\t\tlet signedIn: string;\n\t\tsignedIn = this.cookieService.get('session_user')\n\n\t\tif (signedIn) {\n\t\t\tthis.cookieService.delete('session_user');\n\t\t\tthis.cookieService.delete('session_first_name');\n\t\t\tthis.router.navigate(['/session/signin']);\n\t\t}\n\t}\n\n}\n","// /**\n//  * Title: sign-in.component.ts\n//  * Author: Gunner Bradley\n//  * Date: February 19th 2022\n//  * Description: sign in configuration\n//  */\n// import { Component, OnInit } from '@angular/core';\n// import { SignInService } from '../../sign-in.service';\n// import { Router } from '@angular/router';\n// import { FormBuilder, FormGroup, Validators } from '@angular/forms';\n// import { CookieService } from 'ngx-cookie-service';\n// import { HttpClient } from '@angular/common/http';\n\n// @Component({\n//   selector: 'app-sign-in',\n//   templateUrl: './sign-in.component.html',\n//   styleUrls: ['./sign-in.component.css']\n// })\n// export class SignInComponent implements OnInit {\n\n//   signinForm: FormGroup;\n//   errorMessage: string;\n\n//   constructor(private router: Router, private cookieService: CookieService, private fb: FormBuilder, private http: HttpClient, private signinService: SignInService) {\n//     console.log(this.cookieService.get('session_user'));\n//    }\n\n//   ngOnInit(): void {\n//     this.signinForm = this.fb.group({\n//       employeeId: ['', Validators.compose([Validators.required, Validators.pattern('^[0-9]*$')])]\n//     })\n//   }\n\n\n\n// //******\n\n// // login(): void {\n// //   const empId = this.signinForm.controls['empId'].value;\n\n// //   this.http.get('api/employees/' + empId).subscribe(res => {\n// //     if (res) {\n// //       console.log(res);\n\n// //       this.cookieService.set('session_user', empId, 1);\n\n// //       this.router.navigate(['/'])\n// //     }\n// //     else{\n// //       this.errorMessage = 'The employeeId you entered is not valid, please try again'\n// //     }\n// //   })\n// // }\n\n// //*******\n\n//   get form() { return this.signinForm.controls; }\n\n//   login() {\n//     const formValues = this.signinForm.value;\n//     const employeeId = parseInt(formValues.employeeId);\n\n//     if (this.signinService.validate(employeeId)) {\n//       this.cookieService.set('session_user', employeeId.toString(), 1)\n//       this.router.navigate(['/'])\n//     } else {\n//       this.errorMessage = `The employee ID you entered is invalid, please try again.`;\n//     }\n//   }\n// }\n\n\n\n\n// ********************************\n\n\n\nimport { Component, OnInit, Injectable } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { SignInService } from '../../sign-in.service';\n\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.css']\n})\nexport class SignInComponent implements OnInit {\n\tformModel: FormGroup;\n  err: string;\n\n\tconstructor(private router: Router, private cookieService: CookieService, private http: HttpClient, private signInService: SignInService) { }\n\n\tngOnInit() {\n\t\tthis.formModel = new FormGroup({\n\t\t\temployeeId: new FormControl('', Validators.compose([Validators.required, Validators.pattern(/^\\d/)]))\n\t\t});\n\t}\n\n\tsignIn() {\n\t\tlet signInCheck: boolean;\n\t\tsignInCheck = this.signInService.signInCheck();\n\n\t\tconst employeeId = this.formModel.value.employeeId;\n\n\t\tif(signInCheck == false) {\n\t\t\tthis.http.get(`/api/employee/${employeeId}`).subscribe((response: any) => {\n\n\t\t\t\tif(response) {\n\t\t\t\t\tthis.cookieService.set('session_user', employeeId);\n\t\t\t\t\tthis.cookieService.set('session_first_name', response.firstName);\n\t\t\t\t\tthis.router.navigate(['/']);\n\t\t\t\t} else {\n\t\t\t\t\tthis.err = 'The employee ID was not found.'\n\t\t\t\t}\n\t\t\t})\n\t\t} else {\n\t\t\tthis.router.navigate(['/session/tasks']);\n\t\t}\n\t}\n}\n"," <!--\n   * Title: sign-in.component.html\n * Author: Gunner Bradley\n * Date: March 23rd 2022\n * Description: sign in page html\n\n\n<div fxLayout=\"column\">\n\n  <mat-card fxFlex class=\"mat-elevation-z8 signin-container\" id=\"signInCard\">\n    <mat-card-title> Sign In</mat-card-title>\n\n    <mat-card-content>\n      <div class=\"msg-error\" *ngIf=\"errorMessage\">\n        {{ errorMessage }}\n      </div>\n\n      <div *ngIf=\"signinForm.employeeId.errors && form.employeeId.touched\">\n        <div class=\"msg-error\">\n          Employee ID must be a numeric value.\n        </div>\n      </div>\n\n\n      <mat-card class=\"mat-elevation-z0\" fxLayout=\"column\" fxLayoutGap=\"10px\">\n\n        <form [formGroup]=\"signinForm\" (ngSubmit)=\"login(); signinForm.reset()\">\n          <mat-card-content>\n\n            <mat-form-field fxFlex appearance=\"fill\">\n              <mat-label for=\"txtEmployeeId\" id=\"lblEmployeeId\">ID#</mat-label>\n\n              <input class=\"input-style\" type=\"text\" matInput formControlName=\"employeeId\" required id=\"txtEmployeeId\" name=\"txtEmployeeId\" />\n              <mat-hint>ID's:1007, 1008, 1009, 1010, 1011, 1012</mat-hint>\n            </mat-form-field>\n          </mat-card-content>\n\n          <mat-card-actions>\n            <button type=\"submit\" [disabled]=\"!signinForm.valid\" fxFlex mat-raised-button color=\"primary\">Submit</button>\n          </mat-card-actions>\n        </form>\n      </mat-card>\n\n    </mat-card-content>\n  </mat-card>\n\n</div> -->\n\n\n\n\n\n\n\t<div class=\"row\">\n\t\t<mat-card id=\"signInCard\" class=\"mat-elevation-z8\" >\n      <mat-card-title> Sign In</mat-card-title>\n      <mat-card-content>\n        <form [formGroup]=\"formModel\" (ngSubmit)=\"signIn()\">\n          <mat-error *ngIf=\"formModel.get('employeeId').hasError('required') && formModel.get('employeeId').touched\">The employee ID is missing.</mat-error>\n          <mat-error *ngIf=\"formModel.get('employeeId').hasError('pattern') && formModel.get('employeeId').touched\">The employee ID is not valid.</mat-error>\n          <mat-error *ngIf=\"err\">{{ err }}</mat-error>\n          <input type=\"text\" formControlName=\"employeeId\" name=\"employeeId\" placeholder=\"Employee ID\" class=\"input-style\" required>\n          <mat-card-actions class=\"\">\n            <button type=\"submit\" color=\"none\" class=\"button\">Submit</button>\n          </mat-card-actions>\n        </form>\n      </mat-card-content>\n    </mat-card>\n\t</div>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\n// components\nimport { HomeComponent } from './pages/home/home.component';\nimport { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\nimport { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\nimport { SignInComponent } from './pages/sign-in/sign-in.component';\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\n\n// Material imports\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCardModule } from '@angular/material/card';\nimport { ContactComponent } from './contact/contact.component';\nimport { CreateTaskDialogComponent } from './shared/create-task-dialog/create-task-dialog.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    BaseLayoutComponent,\n    AuthLayoutComponent,\n    SignInComponent,\n    NotFoundComponent,\n    ContactComponent,\n    CreateTaskDialogComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    FlexLayoutModule,\n    MatCardModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatListModule,\n    FormsModule,\n    MatSelectModule,\n    ReactiveFormsModule\n\n  ],\n  providers: [CookieService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef} from '@angular/material/dialog'\n\n@Component({\n  selector: 'app-create-task-dialog',\n  templateUrl: './create-task-dialog.component.html',\n  styleUrls: ['./create-task-dialog.component.css']\n})\nexport class CreateTaskDialogComponent implements OnInit {\n  taskForm: FormGroup;\n  constructor(private dialogRef: MatDialogRef<CreateTaskDialogComponent>, private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.taskForm = this.fb.group({\n      text: [null, Validators.compose([Validators.required])]\n    })\n  }\n\n  createTask() {\n    this.dialogRef.close(this.taskForm.value);\n  }\n\n  cancel() {\n    this.dialogRef.close();\n  }\n\n\n\n\n}\n","<p>create-task-dialog works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>contact works!</p>\n","/**\n * Title: sign-in.guard.ts\n * Author: Gunner Bradley\n * Date: March 23rd 2022\n * Description: sign in configuration\n */\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignInGuard implements CanActivate {\n\n  constructor(private router: Router, private cookieService: CookieService) {}\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const sessionUser = this.cookieService.get('session_user');\n\n    if (sessionUser) {\n      return true;\n    } else {\n      this.router.navigate(['/session/sign-in']);\n      return false;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-base-layout',\n  templateUrl: './base-layout.component.html',\n  styleUrls: ['./base-layout.component.css']\n})\nexport class BaseLayoutComponent implements OnInit {\n\n  assignment: string;\n\n  constructor(private cookieService: CookieService, private router: Router) {\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  signOut() {\n    this.cookieService.deleteAll();\n    this.router.navigate(['/session/sign-in']);\n  }\n}\n","<mat-toolbar class=\"navbar-container\">\n  <mat-toolbar-row class=\"navbar-container\">\n    <div class=\"logo\">Node Bucket</div>\n\n    <div style=\"width: 80%\">\n      <div fxLayout=\"row wrap\" fxLayoutAlign=\"end start\">\n        <button mat-button routerLink=\"/\">Home</button>\n        <button mat-button routerLink=\"/contact\">Contact Us</button>\n        <button mat-button (click)=\"signOut()\">Sign Out</button>\n      </div>\n    </div>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n<hr class=\"hr-style\">\n\n<div fxLayout=\"row wrap\">\n  <div fxFlex>\n    <mat-card class=\"main-container mat-elevation-z0 main-content\" >\n      <br /><br />\n      <mat-card-content>\n        <router-outlet></router-outlet>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>not-found works!</p>\n","\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\nimport { SignInComponent } from './pages/sign-in/sign-in.component';\nimport { SignInGuard } from './sign-in.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BaseLayoutComponent,\n    children: [\n      {\n        path: '',\n        component: HomeComponent\n      }\n    ],\n    canActivate: [SignInGuard]\n  },\n  {\n    path: 'session',\n    component: AuthLayoutComponent,\n    children: [\n      {\n        path: 'not-found',\n        component: NotFoundComponent\n      },\n      {\n        path: 'sign-in',\n        component: SignInComponent\n      }\n    ]\n  },\n  {\n    path: '**',\n    redirectTo: 'session/not-found'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  constructor(private http: HttpClient) { }\n\n  findAllTasks(empId: number): Observable<any> {\n    return this.http.get('api/employees/' + empId + '/tasks')\n  }\n\n  createTask(empId: number, task: string): Observable<any> {\n    return this.http.post('/api/employees/' + empId + '/tasks', {\n      text: task\n    })\n  }\n\n\n\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}