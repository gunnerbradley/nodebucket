{"version":3,"sources":["./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/shared/auth-layout/auth-layout.component.ts","./src/app/shared/auth-layout/auth-layout.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/sign-in.service.ts","./src/app/pages/sign-in/sign-in.component.ts","./src/app/pages/sign-in/sign-in.component.html","./src/app/app.module.ts","./src/app/shared/create-task-dialog/create-task-dialog.component.ts","./src/app/shared/create-task-dialog/create-task-dialog.component.html","./src/app/contact/contact.component.ts","./src/app/contact/contact.component.html","./src/app/sign-in.guard.ts","./src/app/shared/base-layout/base-layout.component.ts","./src/app/shared/base-layout/base-layout.component.html","./src/app/pages/not-found/not-found.component.ts","./src/app/pages/not-found/not-found.component.html","./src/app/app-routing.module.ts","./src/app/pages/services/task.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Employee } from 'src/app/shared/models/employee.interface';\nimport { Item } from 'src/app/shared/models/item.interface';\nimport { CookieService } from 'ngx-cookie-service';\nimport { TaskService } from '../services/task.service';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  taskForm: FormGroup;\n  employee: Employee;\n  toDo: Item[];\n  done: Item[];\n  empId: number;\n\n\n  constructor(public taskService: TaskService, private cookieService: CookieService, private fb: FormBuilder) {\n    this.empId = parseInt(this.cookieService.get('session_user'), 10)\n\n    this.taskService.findAllTasks(this.empId).subscribe(res => {\n      console.log('--Server response from findAllTask--');\n      console.log(res)\n\n      this.employee = res;\n      console.log('--Employee Object--')\n      console.log(this.employee)\n    }, err => {\n      console.log('--Eerver Error');\n      console.log(err);\n    }, () => {\n      console.log('Inside complete function of findAllTasks API');\n\n      this.toDo = this.employee.toDo;\n      this.done = this.employee.done;\n\n      console.log('--ToDo Tasks');\n      console.log(this.toDo);\n\n      console.log('--Done Tasks');\n      console.log(this.done)\n    })\n\n  }\n\n  ngOnInit(): void {}\n\n  createTask() {\n    this.taskService.createTask(this.empId, this.taskForm.value)\n\t}\n\n}\n","<div fxLayout=\"row wrap\">\n  <div fxFlex>\n    <mat-card class=\"mat-elevation-z0 main-list\">\n      <br /><br />\n      <mat-card-title class=\"title\">To-Do List</mat-card-title>\n      <hr>\n      <div fxLayout=\"row\">\n         <div fxLayout=\"column\" fxFlex=\"100%\" class=\"new-task-forum\">\n          <mat-card-subtitle class=\"subtitle\">Add New Task</mat-card-subtitle>\n          <form [formGroup]=\"taskForm\" method=\"post\">\n            <input matInput formControlName=\"text\" type=\"text\" class=\"task-input\" (keydown.enter)=\"createTask()\" placeholder=\"Enter Task...\" id=\"newTask\">\n            <button (click)=\"createTask()\">Add+</button>\n          </form>\n        </div>\n        </div>\n\n<hr>\n      <mat-card-content>\n        <div fxLayout=\"column\" fxFlex=\"50%\" class=\"list todo-list\">\n\n        <mat-card-subtitle class=\"subtitle\">To-Do</mat-card-subtitle>\n        <ul>\n          <li class=\"item \">Buy Milk\n            <button class=\"x-button\">\n              <img\n                src=\"../../../assets/icons/x-symbol.svg\"\n                alt=\"Remove task item button\"\n                height=\"20\"\n                width=\"20\"\n                class=\"x-icon\"\n                />\n            </button>\n          </li>\n        </ul>\n\n        </div>\n\n        <div fxLayout=\"column\" fxFlex=\"50%\" class=\"list\">\n          <mat-card-subtitle class=\"subtitle\">Done</mat-card-subtitle>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth-layout.component.html',\n  styleUrls: ['./auth-layout.component.css']\n})\nexport class AuthLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `<router-outlet></router-outlet>`,\n  styles: [``]\n})\nexport class AppComponent {\n  \n}\n","import { Injectable } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n// export class SignInService {\n\n//   employeeIds: Array<number>;\n\n//   constructor() {\n//     this.employeeIds = [1007, 1008, 1009, 1010, 1011, 1012];\n//   }\n\n//   validate(employeeId: number) {\n//     return this.employeeIds.some(id => id === employeeId);\n//   }\n// }\n\nexport class SignInService {\n\n\tconstructor(private router: Router, private cookieService: CookieService, private http: HttpClient) {}\n\n\t/*\n\t *  getSessionCookie()\n\t *  Params: none\n\t *  Response: string\n\t *  Description: Returns the session_user cookie.\n\t */\n\tpublic getSessionCookie(): string {\n\t\tconst sessionUser = this.cookieService.get('session_user');\n\t\tif (sessionUser) {\n\t\t\treturn sessionUser;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/*\n\t *  signInCheck()\n\t *  Params: none\n\t *  Response: Boolean\n\t *  Description: Checks if a user has a session_user cookie.\n\t */\n\tpublic signInCheck(): boolean {\n\t\tif (this.cookieService.get('session_user')) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/*\n\t *  signOut()\n\t *  Params: none\n\t *  Description: Removes the session_user cookie.\n\t */\n\tpublic signOut() {\n\t\t// Properties\n\t\tlet signedIn: string;\n\t\tsignedIn = this.cookieService.get('session_user')\n\n\t\tif (signedIn) {\n\t\t\tthis.cookieService.delete('session_user');\n\t\t\tthis.cookieService.delete('session_first_name');\n\t\t\tthis.router.navigate(['/session/signin']);\n\t\t}\n\t}\n\n}\n","// /**\n//  * Title: sign-in.component.ts\n//  * Author: Gunner Bradley\n//  * Date: February 19th 2022\n//  * Description: sign in configuration\n//  */\n// import { Component, OnInit } from '@angular/core';\n// import { SignInService } from '../../sign-in.service';\n// import { Router } from '@angular/router';\n// import { FormBuilder, FormGroup, Validators } from '@angular/forms';\n// import { CookieService } from 'ngx-cookie-service';\n// import { HttpClient } from '@angular/common/http';\n\n// @Component({\n//   selector: 'app-sign-in',\n//   templateUrl: './sign-in.component.html',\n//   styleUrls: ['./sign-in.component.css']\n// })\n// export class SignInComponent implements OnInit {\n\n//   signinForm: FormGroup;\n//   errorMessage: string;\n\n//   constructor(private router: Router, private cookieService: CookieService, private fb: FormBuilder, private http: HttpClient, private signinService: SignInService) {\n//     console.log(this.cookieService.get('session_user'));\n//    }\n\n//   ngOnInit(): void {\n//     this.signinForm = this.fb.group({\n//       employeeId: ['', Validators.compose([Validators.required, Validators.pattern('^[0-9]*$')])]\n//     })\n//   }\n\n\n\n// //******\n\n// // login(): void {\n// //   const empId = this.signinForm.controls['empId'].value;\n\n// //   this.http.get('api/employees/' + empId).subscribe(res => {\n// //     if (res) {\n// //       console.log(res);\n\n// //       this.cookieService.set('session_user', empId, 1);\n\n// //       this.router.navigate(['/'])\n// //     }\n// //     else{\n// //       this.errorMessage = 'The employeeId you entered is not valid, please try again'\n// //     }\n// //   })\n// // }\n\n// //*******\n\n//   get form() { return this.signinForm.controls; }\n\n//   login() {\n//     const formValues = this.signinForm.value;\n//     const employeeId = parseInt(formValues.employeeId);\n\n//     if (this.signinService.validate(employeeId)) {\n//       this.cookieService.set('session_user', employeeId.toString(), 1)\n//       this.router.navigate(['/'])\n//     } else {\n//       this.errorMessage = `The employee ID you entered is invalid, please try again.`;\n//     }\n//   }\n// }\n\n\n\n\n// ********************************\n\n\n\nimport { Component, OnInit, Injectable } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { SignInService } from '../../sign-in.service';\n\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.css']\n})\nexport class SignInComponent implements OnInit {\n\tformModel: FormGroup;\n  err: string;\n\n\tconstructor(private router: Router, private cookieService: CookieService, private http: HttpClient, private signInService: SignInService) { }\n\n\tngOnInit() {\n\t\tthis.formModel = new FormGroup({\n\t\t\temployeeId: new FormControl('', Validators.compose([Validators.required, Validators.pattern(/^\\d/)]))\n\t\t});\n\t}\n\n\tsignIn() {\n\t\tlet signInCheck: boolean;\n\t\tsignInCheck = this.signInService.signInCheck();\n\n\t\tconst employeeId = this.formModel.value.employeeId;\n\n\t\tif(signInCheck == false) {\n\t\t\tthis.http.get(`/api/employee/${employeeId}`).subscribe((response: any) => {\n\n\t\t\t\tif(response) {\n\t\t\t\t\tthis.cookieService.set('session_user', employeeId);\n\t\t\t\t\tthis.cookieService.set('session_first_name', response.firstName);\n\t\t\t\t\tthis.router.navigate(['/']);\n\t\t\t\t} else {\n\t\t\t\t\tthis.err = 'The employee ID was not found.'\n\t\t\t\t}\n\t\t\t})\n\t\t} else {\n\t\t\tthis.router.navigate(['/session/tasks']);\n\t\t}\n\t}\n}\n"," <!--\n   * Title: sign-in.component.html\n * Author: Gunner Bradley\n * Date: March 23rd 2022\n * Description: sign in page html\n\n\n<div fxLayout=\"column\">\n\n  <mat-card fxFlex class=\"mat-elevation-z8 signin-container\" id=\"signInCard\">\n    <mat-card-title> Sign In</mat-card-title>\n\n    <mat-card-content>\n      <div class=\"msg-error\" *ngIf=\"errorMessage\">\n        {{ errorMessage }}\n      </div>\n\n      <div *ngIf=\"signinForm.employeeId.errors && form.employeeId.touched\">\n        <div class=\"msg-error\">\n          Employee ID must be a numeric value.\n        </div>\n      </div>\n\n\n      <mat-card class=\"mat-elevation-z0\" fxLayout=\"column\" fxLayoutGap=\"10px\">\n\n        <form [formGroup]=\"signinForm\" (ngSubmit)=\"login(); signinForm.reset()\">\n          <mat-card-content>\n\n            <mat-form-field fxFlex appearance=\"fill\">\n              <mat-label for=\"txtEmployeeId\" id=\"lblEmployeeId\">ID#</mat-label>\n\n              <input class=\"input-style\" type=\"text\" matInput formControlName=\"employeeId\" required id=\"txtEmployeeId\" name=\"txtEmployeeId\" />\n              <mat-hint>ID's:1007, 1008, 1009, 1010, 1011, 1012</mat-hint>\n            </mat-form-field>\n          </mat-card-content>\n\n          <mat-card-actions>\n            <button type=\"submit\" [disabled]=\"!signinForm.valid\" fxFlex mat-raised-button color=\"primary\">Submit</button>\n          </mat-card-actions>\n        </form>\n      </mat-card>\n\n    </mat-card-content>\n  </mat-card>\n\n</div> -->\n\n\n\n\n\n\n\t<div class=\"row\">\n\t\t<mat-card id=\"signInCard\" class=\"mat-elevation-z8\" >\n      <mat-card-title> Sign In</mat-card-title>\n      <mat-card-content>\n        <form [formGroup]=\"formModel\" (ngSubmit)=\"signIn()\">\n          <mat-error *ngIf=\"formModel.get('employeeId').hasError('required') && formModel.get('employeeId').touched\">The employee ID is missing.</mat-error>\n          <mat-error *ngIf=\"formModel.get('employeeId').hasError('pattern') && formModel.get('employeeId').touched\">The employee ID is not valid.</mat-error>\n          <mat-error *ngIf=\"err\">{{ err }}</mat-error>\n          <input type=\"text\" formControlName=\"employeeId\" name=\"employeeId\" placeholder=\"Employee ID\" class=\"input-style\" required>\n          <mat-card-actions class=\"\">\n            <button type=\"submit\" color=\"none\" class=\"button\">Submit</button>\n          </mat-card-actions>\n        </form>\n      </mat-card-content>\n    </mat-card>\n\t</div>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\n// components\nimport { HomeComponent } from './pages/home/home.component';\nimport { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\nimport { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\nimport { SignInComponent } from './pages/sign-in/sign-in.component';\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\n\n// Material imports\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCardModule } from '@angular/material/card';\nimport { ContactComponent } from './contact/contact.component';\nimport { CreateTaskDialogComponent } from './shared/create-task-dialog/create-task-dialog.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    BaseLayoutComponent,\n    AuthLayoutComponent,\n    SignInComponent,\n    NotFoundComponent,\n    ContactComponent,\n    CreateTaskDialogComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    FlexLayoutModule,\n    MatCardModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatListModule,\n    FormsModule,\n    MatSelectModule,\n    ReactiveFormsModule\n\n  ],\n  providers: [CookieService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef} from '@angular/material/dialog'\n\n@Component({\n  selector: 'app-create-task-dialog',\n  templateUrl: './create-task-dialog.component.html',\n  styleUrls: ['./create-task-dialog.component.css']\n})\nexport class CreateTaskDialogComponent implements OnInit {\n  taskForm: FormGroup;\n  constructor(private dialogRef: MatDialogRef<CreateTaskDialogComponent>, private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.taskForm = this.fb.group({\n      text: [null, Validators.compose([Validators.required])]\n    })\n  }\n\n  createTask() {\n    this.dialogRef.close(this.taskForm.value);\n  }\n\n  cancel() {\n    this.dialogRef.close();\n  }\n\n\n\n\n}\n","<p>create-task-dialog works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>contact works!</p>\n","/**\n * Title: sign-in.guard.ts\n * Author: Gunner Bradley\n * Date: March 23rd 2022\n * Description: sign in configuration\n */\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignInGuard implements CanActivate {\n\n  constructor(private router: Router, private cookieService: CookieService) {}\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const sessionUser = this.cookieService.get('session_user');\n\n    if (sessionUser) {\n      return true;\n    } else {\n      this.router.navigate(['/session/sign-in']);\n      return false;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-base-layout',\n  templateUrl: './base-layout.component.html',\n  styleUrls: ['./base-layout.component.css']\n})\nexport class BaseLayoutComponent implements OnInit {\n\n  assignment: string;\n\n  constructor(private cookieService: CookieService, private router: Router) {\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  signOut() {\n    this.cookieService.deleteAll();\n    this.router.navigate(['/session/sign-in']);\n  }\n}\n","<mat-toolbar class=\"navbar-container\">\n  <mat-toolbar-row class=\"navbar-container\">\n    <div class=\"logo\">Node Bucket</div>\n\n    <div style=\"width: 80%\">\n      <div fxLayout=\"row wrap\" fxLayoutAlign=\"end start\">\n        <button mat-button routerLink=\"/\">Home</button>\n        <button mat-button routerLink=\"/contact\">Contact Us</button>\n        <button mat-button (click)=\"signOut()\">Sign Out</button>\n      </div>\n    </div>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n<hr class=\"hr-style\">\n\n<div fxLayout=\"row wrap\">\n  <div fxFlex>\n    <mat-card class=\"main-container mat-elevation-z0 main-content\" >\n      <br /><br />\n      <mat-card-content>\n        <router-outlet></router-outlet>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>not-found works!</p>\n","\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\nimport { SignInComponent } from './pages/sign-in/sign-in.component';\nimport { SignInGuard } from './sign-in.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BaseLayoutComponent,\n    children: [\n      {\n        path: '',\n        component: HomeComponent\n      }\n    ],\n    canActivate: [SignInGuard]\n  },\n  {\n    path: 'session',\n    component: AuthLayoutComponent,\n    children: [\n      {\n        path: 'not-found',\n        component: NotFoundComponent\n      },\n      {\n        path: 'sign-in',\n        component: SignInComponent\n      }\n    ]\n  },\n  {\n    path: '**',\n    redirectTo: 'session/not-found'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  constructor(private http: HttpClient) { }\n\n  public findAllTasks(empId: number): Observable<any> {\n    return this.http.get('api/employees/' + empId + '/tasks')\n  }\n\n  public createTask(empId: number, task: string): Observable<any> {\n    return this.http.post('/api/employees/' + empId + '/tasks', {\n      text: task\n    })\n  }\n\n\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}